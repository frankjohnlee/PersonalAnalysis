{
  "app_entry": "jupyter-qtconsole",
  "app_type": "desk",
  "arch": "x86_64",
  "build": "py35_2",
  "build_number": 2,
  "channel": "https://repo.continuum.io/pkgs/free/win-64",
  "date": "2016-09-23",
  "depends": [
    "ipykernel >=4.1",
    "jupyter_client >=4.1",
    "jupyter_core",
    "pygments",
    "pyqt 5.*",
    "python 3.5*",
    "traitlets"
  ],
  "files": [
    "Lib/site-packages/qtconsole-4.2.1-py3.5.egg-info",
    "Lib/site-packages/qtconsole/__init__.py",
    "Lib/site-packages/qtconsole/__main__.py",
    "Lib/site-packages/qtconsole/__pycache__/__init__.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/__main__.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/_version.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/ansi_code_processor.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/base_frontend_mixin.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/bracket_matcher.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/call_tip_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/client.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/completion_html.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/completion_plain.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/completion_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/console_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/frontend_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/history_console_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/inprocess.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/ipython_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/jupyter_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/kernel_mixins.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/kill_ring.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/mainwindow.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/manager.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/pygments_highlighter.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/qt.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/qt_loaders.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/qtconsoleapp.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/rich_ipython_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/rich_jupyter_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/rich_text.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/styles.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/svg.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/usage.cpython-35.pyc",
    "Lib/site-packages/qtconsole/__pycache__/util.cpython-35.pyc",
    "Lib/site-packages/qtconsole/_version.py",
    "Lib/site-packages/qtconsole/ansi_code_processor.py",
    "Lib/site-packages/qtconsole/base_frontend_mixin.py",
    "Lib/site-packages/qtconsole/bracket_matcher.py",
    "Lib/site-packages/qtconsole/call_tip_widget.py",
    "Lib/site-packages/qtconsole/client.py",
    "Lib/site-packages/qtconsole/completion_html.py",
    "Lib/site-packages/qtconsole/completion_plain.py",
    "Lib/site-packages/qtconsole/completion_widget.py",
    "Lib/site-packages/qtconsole/console_widget.py",
    "Lib/site-packages/qtconsole/frontend_widget.py",
    "Lib/site-packages/qtconsole/history_console_widget.py",
    "Lib/site-packages/qtconsole/inprocess.py",
    "Lib/site-packages/qtconsole/ipython_widget.py",
    "Lib/site-packages/qtconsole/jupyter_widget.py",
    "Lib/site-packages/qtconsole/kernel_mixins.py",
    "Lib/site-packages/qtconsole/kill_ring.py",
    "Lib/site-packages/qtconsole/mainwindow.py",
    "Lib/site-packages/qtconsole/manager.py",
    "Lib/site-packages/qtconsole/pygments_highlighter.py",
    "Lib/site-packages/qtconsole/qt.py",
    "Lib/site-packages/qtconsole/qt_loaders.py",
    "Lib/site-packages/qtconsole/qtconsoleapp.py",
    "Lib/site-packages/qtconsole/resources/icon/JupyterConsole.svg",
    "Lib/site-packages/qtconsole/rich_ipython_widget.py",
    "Lib/site-packages/qtconsole/rich_jupyter_widget.py",
    "Lib/site-packages/qtconsole/rich_text.py",
    "Lib/site-packages/qtconsole/styles.py",
    "Lib/site-packages/qtconsole/svg.py",
    "Lib/site-packages/qtconsole/tests/__init__.py",
    "Lib/site-packages/qtconsole/tests/__pycache__/__init__.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/__pycache__/test_ansi_code_processor.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/__pycache__/test_app.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/__pycache__/test_completion_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/__pycache__/test_console_widget.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/__pycache__/test_kill_ring.cpython-35.pyc",
    "Lib/site-packages/qtconsole/tests/test_ansi_code_processor.py",
    "Lib/site-packages/qtconsole/tests/test_app.py",
    "Lib/site-packages/qtconsole/tests/test_completion_widget.py",
    "Lib/site-packages/qtconsole/tests/test_console_widget.py",
    "Lib/site-packages/qtconsole/tests/test_kill_ring.py",
    "Lib/site-packages/qtconsole/usage.py",
    "Lib/site-packages/qtconsole/util.py",
    "Menu/jupyter.ico",
    "Menu/qtconsole.json",
    "Scripts/jupyter-qtconsole-script.py",
    "Scripts/jupyter-qtconsole.exe"
  ],
  "fn": "qtconsole-4.2.1-py35_2.tar.bz2",
  "icon": "df7feebede9861a203b480c119e38b49.png",
  "icondata": "",
  "license": "BSD",
  "link": {
    "source": "C:\\Users\\mattc\\Anaconda3\\pkgs\\qtconsole-4.2.1-py35_2",
    "type": "copy"
  },
  "md5": "44ee4ada643bdf27652c92deb513b81a",
  "name": "qtconsole",
  "platform": "win",
  "priority": 0,
  "requires": [],
  "schannel": "defaults",
  "size": 206145,
  "subdir": "win-64",
  "summary": "Jupyter Qt console",
  "type": "app",
  "url": "https://repo.continuum.io/pkgs/free/win-64/qtconsole-4.2.1-py35_2.tar.bz2",
  "version": "4.2.1"
}